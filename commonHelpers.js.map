{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nlet initTime = Date.now()\nconst picker = document.querySelector(\"#datetime-picker\")\nconst startBtn = document.querySelector(\"[data-start]\")\nstartBtn.disabled = true\nstartBtn.classList.add(\"start-btn\")\n\nconst days = document.querySelector(\"[data-days]\")\nconst hours = document.querySelector(\"[data-hours]\")\nconst minutes = document.querySelector(\"[data-minutes]\")\nconst seconds = document.querySelector(\"[data-seconds]\")\n\nlet userSelectedDate\nlet intervalId = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n      console.log(selectedDates[0]);\n      \n      userSelectedDate = selectedDates[0]\n      if (userSelectedDate <= initTime) {\n          startBtn.disabled = true \n        //   alert(\"Please choose a date in the future\")\n          iziToast.error({\n              message: 'Please choose a date in the future',\n              position: 'topRight'\n});\n      } else {\n          startBtn.disabled = false\n          \n      }\n   },        \n};\n\nflatpickr(picker, options);\n\nstartBtn.addEventListener(\"click\", (() => {\n    startBtn.disabled = true\n    intervalId = setInterval(() => {\n        const currentTime = Date.now();\n        const diff = userSelectedDate - currentTime\n\n        if (diff < 1000) clearInterval(intervalId);\n        days.textContent = formater(convertMs(diff).days)\n        hours.textContent = formater(convertMs(diff).hours)\n        minutes.textContent = formater(convertMs(diff).minutes)\n        seconds.textContent = formater(convertMs(diff).seconds)\n    }, 1000)\n    \n}))\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\nfunction formater (data) {\n return String(data).padStart(2, '0');\n}\n"],"names":["initTime","picker","startBtn","days","hours","minutes","seconds","userSelectedDate","intervalId","options","selectedDates","iziToast","flatpickr","currentTime","diff","formater","convertMs","ms","data"],"mappings":"+IAOA,IAAIA,EAAW,KAAK,IAAK,EACzB,MAAMC,EAAS,SAAS,cAAc,kBAAkB,EAClDC,EAAW,SAAS,cAAc,cAAc,EACtDA,EAAS,SAAW,GACpBA,EAAS,UAAU,IAAI,WAAW,EAElC,MAAMC,EAAO,SAAS,cAAc,aAAa,EAC3CC,EAAQ,SAAS,cAAc,cAAc,EAC7CC,EAAU,SAAS,cAAc,gBAAgB,EACjDC,EAAU,SAAS,cAAc,gBAAgB,EAEvD,IAAIC,EACAC,EAAa,KAEjB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnB,QAAQ,IAAIA,EAAc,CAAC,CAAC,EAE5BH,EAAmBG,EAAc,CAAC,EAC9BH,GAAoBP,GACpBE,EAAS,SAAW,GAEpBS,EAAS,MAAM,CACX,QAAS,qCACT,SAAU,UACxB,CAAC,GAEST,EAAS,SAAW,EAG1B,CACJ,EAEAU,EAAUX,EAAQQ,CAAO,EAEzBP,EAAS,iBAAiB,QAAU,IAAM,CACtCA,EAAS,SAAW,GACpBM,EAAa,YAAY,IAAM,CAC3B,MAAMK,EAAc,KAAK,MACnBC,EAAOP,EAAmBM,EAE5BC,EAAO,KAAM,cAAcN,CAAU,EACzCL,EAAK,YAAcY,EAASC,EAAUF,CAAI,EAAE,IAAI,EAChDV,EAAM,YAAcW,EAASC,EAAUF,CAAI,EAAE,KAAK,EAClDT,EAAQ,YAAcU,EAASC,EAAUF,CAAI,EAAE,OAAO,EACtDR,EAAQ,YAAcS,EAASC,EAAUF,CAAI,EAAE,OAAO,CACzD,EAAE,GAAI,CAEX,CAAG,EAEH,SAASE,EAAUC,EAAI,CAQrB,MAAMd,EAAO,KAAK,MAAMc,EAAK,KAAG,EAE1Bb,EAAQ,KAAK,MAAOa,EAAK,MAAO,IAAI,EAEpCZ,EAAU,KAAK,MAAQY,EAAK,MAAO,KAAQ,GAAM,EAEjDX,EAAU,KAAK,MAASW,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAd,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CACA,SAASS,EAAUG,EAAM,CACxB,OAAO,OAAOA,CAAI,EAAE,SAAS,EAAG,GAAG,CACpC"}